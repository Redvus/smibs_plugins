.wrapper {

	&__modals {
		z-index: 1500;
	}

	&__modal {
		width: 100vw;
		height: 100vh;
		display: block;
		position: absolute;
		top: 0;
		left: 0;
		z-index: 1;
		opacity: 0;
		visibility: hidden;
		// cursor: url("../images/g_cursorPoint.png") 125 125, default;
		//https://webdesign.tutsplus.com/how-to-create-a-custom-mouse-cursor-with-css-or-javascript--cms-106724t

		&--game {
			z-index: 0;
		}

		&_back {
			width: 100vw;
			height: 100vh;
			display: block;
			position: absolute;
			top: 0;
			left: 0;
			background-color: rgba(darken($secondary, 15%), 0.8);
			z-index: -1;

			&--close {
				width: 100vw;
				height: 100vh;
				display: block;
				position: absolute;
				top: 0;
				left: 0;
				z-index: 0;

				img {
					width: 100%;
					height: 100%;
					display: block;
					position: relative;
					object-position: center;
					object-fit: cover;
				}
			}

			img {
				width: 100%;
				height: 100%;
				display: block;
				position: relative;
				object-position: left center;
				object-fit: cover;
			}
		}

		&_content {
			width: calc((#{$containerWidth} / 2) - 2rem);
			height: 100vh;
			display: flex;
			position: absolute;
			align-items: center;
			top: 0;
			right: calc((100vw - #{$containerWidth}) / 2);
			// background-color: rgba($primary, 0.7);
			overflow: auto;
			opacity: 0;
			visibility: hidden;
			z-index: 5;

			&_inside {
				width: calc(100% - 4rem);
				min-height: 5rem;
				display: flex;
				flex-direction: column;
				align-items: center;
				justify-content: flex-start;
				position: absolute;
				padding: 2rem;
				// top: 6rem;
				// overflow: auto;
				color: $primary;
				text-align: center;

				&:before {
					content: "";
					width: 100%;
					height: 3rem;
					display: flex;
					align-items: center;
					justify-content: center;
					position: relative;
					top: 0;
					left: 0;
					// background: url("../images/g_cornerTop.png") 50% 50% / 70% 70% no-repeat;
					background: url("../images/cornerTop.svg") 50% 50% / 70% 70% no-repeat;
				}

				&:after {
					content: "";
					width: 100%;
					height: 3rem;
					display: flex;
					align-items: center;
					justify-content: center;
					position: relative;
					// top: calc(100vh - 5rem);
					bottom: 0;
					left: 0;
					// background: url("../images/g_cornerBottom.png") 50% 50% / 70% 70% no-repeat;
					background: url("../images/cornerBottom.svg") 50% 50% / 70% 70% no-repeat;
				}
			}
		}

		&_close {
			width: 3rem;
			height: 3rem;
			display: flex;
			align-items: center;
			justify-content: center;
			position: absolute;
			top: 2rem;
			right: 2rem;
			border: 0.15rem solid $primary;
			border-radius: 50%;
			z-index: 10;
			cursor: pointer;
			opacity: 0;
			visibility: hidden;

			&::after {
				content: "";
				width: 1.5rem;
				height: 0.15rem;
				display: block;
				position: absolute;
				background-color: $primary;
				transform: rotate(45deg);
			}

			&::before {
				content: "";
				width: 1.5rem;
				height: 0.15rem;
				display: block;
				position: absolute;
				background-color: $primary;
				transform: rotate(-45deg);
			}
		}

		&_gamepart {
			width: auto;
			// height: auto;
			display: block;
			position: absolute;
			z-index: 10;
			opacity: 0.4;
			transition: opacity 0.3s;
			cursor: pointer;

			img {
				width: 100%;
				height: 100%;
				display: block;
				position: relative;
				object-fit: contain;
				object-position: center;
			}

			&--large {
				// width: 5rem;
				// height: 5rem;
				background-color: rgba($primary, 0.2);
				opacity: 0.6;
			}

			&--cut {
				width: 270px;
				height: 200px;
				overflow: hidden;

				img {
					width: auto;
					height: auto;
				}
			}

			&:hover {
				opacity: 1;
			}
		}

		&_slogan {
			width: 100%;
			display: flex;
			align-items: center;
			justify-content: center;
			flex-direction: column;
			position: absolute;
			top: 50%;
			left: 50%;
			text-align: center;
			color: $primary;
			transform: translate(-50%, -50%);
			z-index: 0;
			opacity: 0;
			visibility: hidden;
		}

		&_button {
			width: $modalButtonWidth;
			height: $modalButtonHeight;
			display: flex;
			position: absolute;
			// background-color: #fff;
			cursor: pointer;

			&--music {
				left: 20%;
				top: 35%;
				transform: translate(-50%, -50%);
				background: url('../images/svg/iconMusic.svg') 100% 0 / 200% 100% no-repeat;
				filter: drop-shadow(0.5rem 0.5rem 0.5rem rgba($third, 0.7));
			}

			&--pause {
				background: url('../images/svg/iconMusic.svg') 0 0 / 200% 100% no-repeat;
			}

			&--exit {
				width: initial;
				height: initial;
				position: relative;
				margin-top: 3rem;
				padding: 0.6rem 1rem 0.4rem;
				border: 0.05rem solid $primary;
				border-radius: 0.6rem;
				transition: all $base-duration;

				&:hover {
					background-color: darken((rgba($secondary, 0.5)), 10%);
				}
			}

			&--final {
				width: fit-content;
				left: 50%;
				transform: translateX(-50%);
			}

			&--video {
				width: initial;
				height: initial;
				position: relative;
				margin: 1rem 0 2rem;
				padding: 0.6rem 1rem 0.4rem;
				border: 0.05rem solid $primary;
				border-radius: 0.6rem;
				transition: all $base-duration;

				&:hover {
					background-color: darken((rgba($secondary, 0.5)), 10%);
				}
			}

		}

		&_mask {
			width: 50vw;
			height: 100vh;
			display: block;
			position: absolute;
			top: 0;
			right: 0;
			background: linear-gradient(90deg, rgba($secondary, 0) 0%, rgba($secondary, 0.5) 15%, rgba($secondary, 1) 60%, rgba($secondary, 1) 100%);
			mix-blend-mode: multiply;
			z-index: 3;

			&--final {
				z-index: -1;
				opacity: 0;
				visibility: hidden;
			}
		}

		&_video {
			width: $videoFinalWidth;
			height: calc(#{$videoFinalWidth} / 1.778);
			display: block;
			position: absolute;
			top: 45%;
			left: 50%;
			transform: translate(-50%, -50%);
			background-color: rgba($third, 0.3);
			z-index: 1600;
			opacity: 0;
			visibility: hidden;
		}

		@include grid-media($XXLarge) {

			&_content {
				width: calc((#{$containerWidthLarge} / 2) - 2rem);
				right: calc((100vw - #{$containerWidthLarge}) / 2);
			}
		}

		@include grid-media($XLarge) {

			&_content {
				width: calc((#{$containerWidthLarge} / 2) - 2rem);
				right: calc((100vw - #{$containerWidthLarge}) / 2);
			}
		}

		@include grid-media($Large) {

			&_content {
				width: calc((#{$containerWidthLarge} / 2) - 2rem);
				right: calc((100vw - #{$containerWidthLarge}) / 2);
			}
		}
	}
}